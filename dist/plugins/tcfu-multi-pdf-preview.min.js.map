{
  "version": 3,
  "sources": ["../../src/plugins/multi-pdf-preview-plugin/index.ts"],
  "sourcesContent": ["import './styles.css';\nimport { IPlugin, IUploadData } from '../../core/plugins/plugin-declarations';\nimport { ISettings } from '../../core/settings';\n\ninterface IGridItems {\n  $box: HTMLElement;\n  file: File;\n  url: string;\n}\n\nconst removeBtnSVG = `<svg \n  xmlns=\"http://www.w3.org/2000/svg\" \n  width=\"20\"\n  height=\"20\"\n  fill=\"none\" \n  stroke=\"currentColor\" \n  stroke-linecap=\"round\" \n  stroke-linejoin=\"round\" \n  stroke-width=\"1.5\" \n  viewBox=\"0 0 24 24\">\n  <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\n  <path d=\"M18 6 6 18M6 6l12 12\"/>\n</svg>`;\n\n/**\n * This plugin displays a group of PDF files in the preview panel.\n */\nconst tcfuMultiPDFPreviewPlugin = (_settings: ISettings) : IPlugin => {\n\n  let uploadData: IUploadData | undefined = undefined;\n  let gridItems: IGridItems[] = [];\n  let $previewPanel: HTMLElement | undefined = undefined;\n  let $cancelButton: HTMLElement | undefined = undefined;\n  let $uploadBtn: HTMLElement | undefined = undefined;\n\n  const cancel = () => {\n    if(!uploadData) return;\n\n    uploadData.$uploadPanel?.classList.remove('hidden');\n    $previewPanel?.classList.add('hidden');\n\n    for(const gridItem of gridItems){\n      URL.revokeObjectURL(gridItem.url);\n      gridItem.$box.remove();\n    }\n\n    gridItems = [];\n\n    if(uploadData.$fileInput){\n      uploadData.$fileInput.value = '';\n    }\n  };\n\n  const upload = () => {\n    if(!uploadData) return;\n\n    if(_settings.uploadCallback && typeof _settings.uploadCallback === 'function'){\n      _settings.uploadCallback({\n        files: gridItems.map(item => item.file),\n      });\n    }\n  };\n\n  const removeGridItem = (evt: MouseEvent) => {\n    const $btn = evt.currentTarget as HTMLButtonElement;\n    const $box = $btn.parentElement;\n    if(!$box) return;\n\n    const foundIndex = gridItems.findIndex(gridItem => gridItem.$box === $box);\n    if(foundIndex === -1) return;\n\n    gridItems.splice(foundIndex, 1);\n    $box.remove();\n\n    if(gridItems.length <= 0){\n      cancel();\n    }\n  };\n\n  return {\n    id: 'MultiImagePreviewPlugin',\n    title: 'Multi Image Preview Plugin',\n\n    extensions: ['pdf'],\n    mimeTypes: ['application/pdf'],\n\n    upload: async (_uploadData: IUploadData) => {\n      uploadData = _uploadData;\n      $previewPanel = uploadData.$uploader.querySelector('[data-tc=\"preview-panel\"]') as HTMLElement;\n      if(!$previewPanel) return;\n\n      uploadData.$uploadPanel?.classList.add('hidden');\n      $previewPanel?.classList.remove('hidden');\n\n      $cancelButton = $previewPanel.querySelector('[data-tc=\"cancel-preview-btn\"]') as HTMLElement;\n      $cancelButton?.addEventListener('click', cancel);\n\n      $uploadBtn = $previewPanel.querySelector('[data-tc=\"upload-btn\"]') as HTMLElement;\n      $uploadBtn?.addEventListener('click', upload);\n\n      const $preview = $previewPanel.querySelector('[data-tc=\"preview\"]') as HTMLElement;\n\n      for(const file of uploadData.files){\n\n        const $box = document.createElement('div') as HTMLElement;\n        $box.classList.add('tcfu-file-box');\n\n        // create remove button -----------------\n        const $removeGridItemBtn = document.createElement('button') as HTMLButtonElement;\n        $removeGridItemBtn.type = 'button';\n        $removeGridItemBtn.classList.add('tcfu-remove-btn');\n        $removeGridItemBtn.innerHTML = removeBtnSVG;\n        $box.append($removeGridItemBtn);\n        $removeGridItemBtn.addEventListener('click', removeGridItem);\n\n        // create embed -------------------------\n        const $embed = document.createElement('embed') as HTMLEmbedElement;\n        const url = URL.createObjectURL(file);\n        $embed.src = url;\n        $box.append($embed);\n\n        gridItems.push({\n          $box,\n          file,\n          url,\n        });\n        $preview?.append($box);\n      }\n\n      if(_settings.previewCallback && typeof _settings.previewCallback === 'function'){\n        _settings.previewCallback({\n          files: _uploadData.files,\n        });\n      }\n    },\n\n    destroy: () => {\n      for(const gridItem of gridItems){\n        URL.revokeObjectURL(gridItem.url);\n        gridItem.$box.remove();\n      }\n\n      gridItems = [];\n\n      $cancelButton?.removeEventListener('click', cancel);\n      $uploadBtn?.removeEventListener('click', upload);\n\n      uploadData = undefined;\n      $previewPanel = undefined;\n      $cancelButton = undefined;\n      $uploadBtn = undefined;\n    },\n  };\n};\n\ndeclare global {\n  interface Window {\n    tcfuMultiPDFPreviewPlugin: typeof tcfuMultiPDFPreviewPlugin\n  }\n}\n\nwindow.tcfuMultiPDFPreviewPlugin = tcfuMultiPDFPreviewPlugin;\n\nexport default tcfuMultiPDFPreviewPlugin;"],
  "mappings": ";;;;;;;mNAUA,IAAMA,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAiBfC,EAA6BC,GAAmC,CAEpE,IAAIC,EACAC,EAA0B,CAAC,EAC3BC,EACAC,EACAC,EAEEC,EAAS,IAAM,CAnCvB,IAAAC,EAoCI,GAAG,EAACN,EAEJ,EAAAM,EAAAN,EAAW,eAAX,MAAAM,EAAyB,UAAU,OAAO,UAC1CJ,GAAA,MAAAA,EAAe,UAAU,IAAI,UAE7B,QAAUK,KAAYN,EACpB,IAAI,gBAAgBM,EAAS,GAAG,EAChCA,EAAS,KAAK,OAAO,EAGvBN,EAAY,CAAC,EAEVD,EAAW,aACZA,EAAW,WAAW,MAAQ,IAElC,EAEMQ,EAAS,IAAM,CAChB,CAACR,GAEDD,EAAU,gBAAkB,OAAOA,EAAU,gBAAmB,YACjEA,EAAU,eAAe,CACvB,MAAOE,EAAU,IAAIQ,GAAQA,EAAK,IAAI,CACxC,CAAC,CAEL,EAEMC,EAAkBC,GAAoB,CAE1C,IAAMC,EADOD,EAAI,cACC,cAClB,GAAG,CAACC,EAAM,OAEV,IAAMC,EAAaZ,EAAU,UAAUM,GAAYA,EAAS,OAASK,CAAI,EACtEC,IAAe,KAElBZ,EAAU,OAAOY,EAAY,CAAC,EAC9BD,EAAK,OAAO,EAETX,EAAU,QAAU,GACrBI,EAAO,EAEX,EAEA,MAAO,CACL,GAAI,0BACJ,MAAO,6BAEP,WAAY,CAAC,KAAK,EAClB,UAAW,CAAC,iBAAiB,EAE7B,OAAeS,GAA6BC,EAAA,wBAtFhD,IAAAT,EAyFM,GAFAN,EAAac,EACbZ,EAAgBF,EAAW,UAAU,cAAc,2BAA2B,EAC3E,CAACE,EAAe,QAEnBI,EAAAN,EAAW,eAAX,MAAAM,EAAyB,UAAU,IAAI,UACvCJ,GAAA,MAAAA,EAAe,UAAU,OAAO,UAEhCC,EAAgBD,EAAc,cAAc,gCAAgC,EAC5EC,GAAA,MAAAA,EAAe,iBAAiB,QAASE,GAEzCD,EAAaF,EAAc,cAAc,wBAAwB,EACjEE,GAAA,MAAAA,EAAY,iBAAiB,QAASI,GAEtC,IAAMQ,EAAWd,EAAc,cAAc,qBAAqB,EAElE,QAAUe,KAAQjB,EAAW,MAAM,CAEjC,IAAMY,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAU,IAAI,eAAe,EAGlC,IAAMM,EAAqB,SAAS,cAAc,QAAQ,EAC1DA,EAAmB,KAAO,SAC1BA,EAAmB,UAAU,IAAI,iBAAiB,EAClDA,EAAmB,UAAYrB,EAC/Be,EAAK,OAAOM,CAAkB,EAC9BA,EAAmB,iBAAiB,QAASR,CAAc,EAG3D,IAAMS,EAAS,SAAS,cAAc,OAAO,EACvCC,EAAM,IAAI,gBAAgBH,CAAI,EACpCE,EAAO,IAAMC,EACbR,EAAK,OAAOO,CAAM,EAElBlB,EAAU,KAAK,CACb,KAAAW,EACA,KAAAK,EACA,IAAAG,CACF,CAAC,EACDJ,GAAA,MAAAA,EAAU,OAAOJ,EACnB,CAEGb,EAAU,iBAAmB,OAAOA,EAAU,iBAAoB,YACnEA,EAAU,gBAAgB,CACxB,MAAOe,EAAY,KACrB,CAAC,CAEL,GAEA,QAAS,IAAM,CACb,QAAUP,KAAYN,EACpB,IAAI,gBAAgBM,EAAS,GAAG,EAChCA,EAAS,KAAK,OAAO,EAGvBN,EAAY,CAAC,EAEbE,GAAA,MAAAA,EAAe,oBAAoB,QAASE,GAC5CD,GAAA,MAAAA,EAAY,oBAAoB,QAASI,GAEzCR,EAAa,OACbE,EAAgB,OAChBC,EAAgB,OAChBC,EAAa,MACf,CACF,CACF,EAQA,OAAO,0BAA4BN,EAEnC,IAAOuB,EAAQvB",
  "names": ["removeBtnSVG", "tcfuMultiPDFPreviewPlugin", "_settings", "uploadData", "gridItems", "$previewPanel", "$cancelButton", "$uploadBtn", "cancel", "_a", "gridItem", "upload", "item", "removeGridItem", "evt", "$box", "foundIndex", "_uploadData", "__async", "$preview", "file", "$removeGridItemBtn", "$embed", "url", "multi_pdf_preview_plugin_default"]
}
