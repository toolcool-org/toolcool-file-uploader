{
  "version": 3,
  "sources": ["../../src/core/domain/math-provider.ts", "../../src/plugins/multi-image-preview-plugin/index.ts"],
  "sourcesContent": ["// eslint-disable-next-line\nexport const isNumber = (input: any) => {\n  return !isNaN(parseFloat(input)) && isFinite(input);\n};\n", "import './styles.css';\nimport { IPlugin, IUploadData } from '../../core/plugins/plugin-declarations';\nimport { ISettings } from '../../core/settings';\nimport { isNumber } from '../../core/domain/math-provider';\n\nexport interface ILoadedImage {\n  $image: HTMLImageElement;\n  width: number;\n  height: number;\n}\n\nconst loadImage = (file: File) => {\n  return new Promise<ILoadedImage>((resolve, reject) => {\n    const $image = new Image();\n\n    $image.crossOrigin = 'Anonymous';\n    $image.onerror = (err) => reject(err);\n\n    $image.onload = (evt) => {\n      const { width, height } = evt.target as HTMLImageElement;\n      resolve({\n        $image,\n        width,\n        height,\n      });\n    };\n\n    const reader = new FileReader();\n    reader.onerror = (err) => reject(err);\n    reader.onload = () => {\n      $image.src = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\n/**\n * This plugin displays a group of standard image formats in the preview panel.\n */\nconst tcfuMultiImagePreviewPlugin = (_settings: ISettings) : IPlugin => {\n\n  let uploadData: IUploadData | undefined = undefined;\n  let $figures: HTMLElement[] = [];\n  let $previewPanel: HTMLElement | undefined = undefined;\n  let $cancelButton: HTMLElement | undefined = undefined;\n  let $uploadBtn: HTMLElement | undefined = undefined;\n\n  const cancel = () => {\n    if(!uploadData) return;\n\n    uploadData.$uploadPanel?.classList.remove('hidden');\n    $previewPanel?.classList.add('hidden');\n\n    for(const $figure of $figures){\n      $figure.remove();\n    }\n\n    $figures = [];\n\n    if(uploadData.$fileInput){\n      uploadData.$fileInput.value = '';\n    }\n  };\n\n  const upload = () => {\n    if(!uploadData) return;\n\n    if(_settings.uploadCallback && typeof _settings.uploadCallback === 'function'){\n      _settings.uploadCallback({\n        files: uploadData.files,\n      });\n    }\n  };\n\n  return {\n    id: 'MultiImagePreviewPlugin',\n    title: 'Multi Image Preview Plugin',\n\n    extensions: ['jpg', 'jpeg', 'png', 'apng', 'gif', 'avif', 'svg', 'webp'],\n    mimeTypes: [\n      'image/jpeg',\n      'image/png',\n      'image/apng',\n      'image/avif',\n      'image/svg+xml',\n      'image/webp',\n    ],\n\n    /**\n     * Check if the image is valid.\n     */\n    validate: async (_settings: ISettings, file: File) => {\n      let img: ILoadedImage | null = null;\n      try{\n        img = await loadImage(file);\n      }\n      catch (ex){\n        // error\n      }\n\n      if(!img){\n        return {\n          isValid: false,\n          message: 'Invalid image.'\n        };\n      }\n\n      if(isNumber(_settings.maxWidth) && img.width > (_settings.maxWidth as number)){\n        return {\n          isValid: false,\n          message: `The image width should not be more than ${ _settings.maxWidth } pixels.`,\n        };\n      }\n\n      if(isNumber(_settings.maxHeight) && img.height > (_settings.maxHeight as number)){\n        return {\n          isValid: false,\n          message: `The image height should not be more than ${ _settings.maxHeight } pixels.`,\n        };\n      }\n\n      return {\n        isValid: true,\n        message: '',\n      };\n    },\n\n    upload: async (_uploadData: IUploadData) => {\n      uploadData = _uploadData;\n      $previewPanel = uploadData.$uploader.querySelector('[data-tc=\"preview-panel\"]') as HTMLElement;\n      if(!$previewPanel) return;\n\n      uploadData.$uploadPanel?.classList.add('hidden');\n      $previewPanel?.classList.remove('hidden');\n\n      $cancelButton = $previewPanel.querySelector('[data-tc=\"cancel-preview-btn\"]') as HTMLElement;\n      $cancelButton?.addEventListener('click', cancel);\n\n      $uploadBtn = $previewPanel.querySelector('[data-tc=\"upload-btn\"]') as HTMLElement;\n      $uploadBtn?.addEventListener('click', upload);\n\n      const $preview = $previewPanel.querySelector('[data-tc=\"preview\"]') as HTMLElement;\n\n      for(const file of uploadData.files){\n        let img: ILoadedImage | null = null;\n\n        try{\n          img = await loadImage(file);\n        }\n        catch (ex){\n          console.error('Image is not valid:', ex);\n        }\n\n        if(!img) continue;\n        const $figure = document.createElement('figure') as HTMLElement;\n        $figure.append(img.$image);\n        $figures.push($figure);\n        $preview?.append($figure);\n      }\n\n      if(_settings.previewCallback && typeof _settings.previewCallback === 'function'){\n        _settings.previewCallback({\n          files: _uploadData.files,\n        });\n      }\n    },\n\n    destroy: () => {\n      for(const $figure of $figures){\n        $figure.remove();\n      }\n\n      $figures = [];\n\n      $cancelButton?.removeEventListener('click', cancel);\n      $uploadBtn?.removeEventListener('click', upload);\n\n      uploadData = undefined;\n      $previewPanel = undefined;\n      $cancelButton = undefined;\n      $uploadBtn = undefined;\n    },\n  };\n};\n\ndeclare global {\n  interface Window {\n    tcfuMultiImagePreviewPlugin: typeof tcfuMultiImagePreviewPlugin\n  }\n}\n\nwindow.tcfuImagePreviewPlugin = tcfuMultiImagePreviewPlugin;\n\nexport default tcfuMultiImagePreviewPlugin;"],
  "mappings": "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",
  "names": ["isNumber", "input", "loadImage", "file", "resolve", "reject", "$image", "err", "evt", "width", "height", "reader", "tcfuMultiImagePreviewPlugin", "_settings", "uploadData", "$figures", "$previewPanel", "$cancelButton", "$uploadBtn", "cancel", "_a", "$figure", "upload", "__async", "img", "ex", "isNumber", "_uploadData", "$preview", "multi_image_preview_plugin_default"]
}
