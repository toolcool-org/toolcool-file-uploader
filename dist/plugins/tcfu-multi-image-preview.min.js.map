{
  "version": 3,
  "sources": ["../../src/core/domain/math-provider.ts", "../../src/plugins/multi-image-preview-plugin/index.ts"],
  "sourcesContent": ["// eslint-disable-next-line\nexport const isNumber = (input: any) => {\n  return !isNaN(parseFloat(input)) && isFinite(input);\n};\n", "import './styles.css';\nimport { IPlugin, IUploadData } from '../../core/plugins/plugin-declarations';\nimport { ISettings } from '../../core/settings';\nimport { isNumber } from '../../core/domain/math-provider';\n\nexport interface ILoadedImage {\n  $image: HTMLImageElement;\n  width: number;\n  height: number;\n}\n\ninterface IGridItems {\n  $figure: HTMLElement;\n  file: File;\n}\n\nconst loadImage = (file: File) => {\n  return new Promise<ILoadedImage>((resolve, reject) => {\n    const $image = new Image();\n\n    $image.crossOrigin = 'Anonymous';\n    $image.onerror = (err) => reject(err);\n\n    $image.onload = (evt) => {\n      const { width, height } = evt.target as HTMLImageElement;\n      resolve({\n        $image,\n        width,\n        height,\n      });\n    };\n\n    const reader = new FileReader();\n    reader.onerror = (err) => reject(err);\n    reader.onload = () => {\n      $image.src = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\nconst removeBtnSVG = `<svg \n  xmlns=\"http://www.w3.org/2000/svg\" \n  width=\"20\"\n  height=\"20\"\n  fill=\"none\" \n  stroke=\"currentColor\" \n  stroke-linecap=\"round\" \n  stroke-linejoin=\"round\" \n  stroke-width=\"1.5\" \n  viewBox=\"0 0 24 24\">\n  <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\n  <path d=\"M18 6 6 18M6 6l12 12\"/>\n</svg>`;\n\n/**\n * This plugin displays a group of standard image formats in the preview panel.\n */\nconst tcfuMultiImagePreviewPlugin = (_settings: ISettings) : IPlugin => {\n\n  let uploadData: IUploadData | undefined = undefined;\n  let gridItems: IGridItems[] = [];\n  let $previewPanel: HTMLElement | undefined = undefined;\n  let $cancelButton: HTMLElement | undefined = undefined;\n  let $uploadBtn: HTMLElement | undefined = undefined;\n\n  const cancel = () => {\n    if(!uploadData) return;\n\n    uploadData.$uploadPanel?.classList.remove('hidden');\n    $previewPanel?.classList.add('hidden');\n\n    for(const gridItem of gridItems){\n      gridItem.$figure.remove();\n    }\n\n    gridItems = [];\n\n    if(uploadData.$fileInput){\n      uploadData.$fileInput.value = '';\n    }\n  };\n\n  const upload = () => {\n    if(!uploadData) return;\n\n    if(_settings.uploadCallback && typeof _settings.uploadCallback === 'function'){\n      _settings.uploadCallback({\n        files: gridItems.map(item => item.file),\n      });\n    }\n  };\n\n  const removeImage = (evt: MouseEvent) => {\n    const $btn = evt.currentTarget as HTMLButtonElement;\n    const $figure = $btn.parentElement;\n    if(!$figure) return;\n\n    const foundIndex = gridItems.findIndex(gridItem => gridItem.$figure === $figure);\n    if(foundIndex === -1) return;\n\n    gridItems.splice(foundIndex, 1);\n    $figure.remove();\n\n    if(gridItems.length <= 0){\n      cancel();\n    }\n  };\n\n  return {\n    id: 'MultiImagePreviewPlugin',\n    title: 'Multi Image Preview Plugin',\n\n    extensions: ['jpg', 'jpeg', 'png', 'apng', 'gif', 'avif', 'svg', 'webp'],\n    mimeTypes: [\n      'image/jpeg',\n      'image/png',\n      'image/apng',\n      'image/avif',\n      'image/svg+xml',\n      'image/webp',\n    ],\n\n    /**\n     * Check if the image is valid.\n     */\n    validate: async (_settings: ISettings, file: File) => {\n      let img: ILoadedImage | null = null;\n      try{\n        img = await loadImage(file);\n      }\n      catch (ex){\n        // error\n      }\n\n      if(!img){\n        return {\n          isValid: false,\n          message: 'Invalid image.'\n        };\n      }\n\n      if(isNumber(_settings.maxWidth) && img.width > (_settings.maxWidth as number)){\n        return {\n          isValid: false,\n          message: `The image width should not be more than ${ _settings.maxWidth } pixels.`,\n        };\n      }\n\n      if(isNumber(_settings.maxHeight) && img.height > (_settings.maxHeight as number)){\n        return {\n          isValid: false,\n          message: `The image height should not be more than ${ _settings.maxHeight } pixels.`,\n        };\n      }\n\n      return {\n        isValid: true,\n        message: '',\n      };\n    },\n\n    upload: async (_uploadData: IUploadData) => {\n      uploadData = _uploadData;\n      $previewPanel = uploadData.$uploader.querySelector('[data-tc=\"preview-panel\"]') as HTMLElement;\n      if(!$previewPanel) return;\n\n      uploadData.$uploadPanel?.classList.add('hidden');\n      $previewPanel?.classList.remove('hidden');\n\n      $cancelButton = $previewPanel.querySelector('[data-tc=\"cancel-preview-btn\"]') as HTMLElement;\n      $cancelButton?.addEventListener('click', cancel);\n\n      $uploadBtn = $previewPanel.querySelector('[data-tc=\"upload-btn\"]') as HTMLElement;\n      $uploadBtn?.addEventListener('click', upload);\n\n      const $preview = $previewPanel.querySelector('[data-tc=\"preview\"]') as HTMLElement;\n\n      for(const file of uploadData.files){\n        let img: ILoadedImage | null = null;\n\n        try{\n          img = await loadImage(file);\n        }\n        catch (ex){\n          console.error('Image is not valid:', ex);\n        }\n\n        if(!img) continue;\n        const $figure = document.createElement('figure') as HTMLElement;\n\n        const $removeImageBtn = document.createElement('button') as HTMLButtonElement;\n        $removeImageBtn.type = 'button';\n        $removeImageBtn.classList.add('tcfu-remove-btn');\n        $removeImageBtn.innerHTML = removeBtnSVG;\n        $figure.append($removeImageBtn);\n        $removeImageBtn.addEventListener('click', removeImage);\n\n        $figure.append(img.$image);\n        gridItems.push({\n          $figure,\n          file,\n        });\n        $preview?.append($figure);\n      }\n\n      if(_settings.previewCallback && typeof _settings.previewCallback === 'function'){\n        _settings.previewCallback({\n          files: _uploadData.files,\n        });\n      }\n    },\n\n    destroy: () => {\n      for(const gridItem of gridItems){\n        gridItem.$figure.remove();\n      }\n\n      gridItems = [];\n\n      $cancelButton?.removeEventListener('click', cancel);\n      $uploadBtn?.removeEventListener('click', upload);\n\n      uploadData = undefined;\n      $previewPanel = undefined;\n      $cancelButton = undefined;\n      $uploadBtn = undefined;\n    },\n  };\n};\n\ndeclare global {\n  interface Window {\n    tcfuMultiImagePreviewPlugin: typeof tcfuMultiImagePreviewPlugin\n  }\n}\n\nwindow.tcfuMultiImagePreviewPlugin = tcfuMultiImagePreviewPlugin;\n\nexport default tcfuMultiImagePreviewPlugin;"],
  "mappings": "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",
  "names": ["isNumber", "input", "loadImage", "file", "resolve", "reject", "$image", "err", "evt", "width", "height", "reader", "removeBtnSVG", "tcfuMultiImagePreviewPlugin", "_settings", "uploadData", "gridItems", "$previewPanel", "$cancelButton", "$uploadBtn", "cancel", "_a", "gridItem", "upload", "item", "removeImage", "$figure", "foundIndex", "__async", "img", "ex", "isNumber", "_uploadData", "$preview", "$removeImageBtn", "multi_image_preview_plugin_default"]
}
